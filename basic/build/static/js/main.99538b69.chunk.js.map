{"version":3,"sources":["containers/Bpmn.module.scss","containers/EditorBasic.js","sources/xml.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","canvas","panel","Bpmn","renderDiagram","xml","_this","bpmnModeler","importXML","err","console","log","this","BpmnModeler","propertiesPanel","parent","additionalModules","propertiesPanelModule","propertiesProviderModule","moddleExtensions","camunda","camundaModdleDescriptor","react_default","a","createElement","className","styles","id","concat","style","height","Component","Header","Sider","Content","SubMenu","urlData","editorBasic","codeData","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","collapsed","state","handleSelectItme","params","key","item","HashRouter","layout","trigger","collapsible","menu","defaultSelectedKeys","defaultOpenKeys","mode","theme","inlineCollapsed","onSelect","title","icon","type","Item","Link","to","background","padding","onClick","display","flexDirection","margin","minHeight","href","dangerouslySetInnerHTML","__html","position","flex","left","top","width","Route","exact","path","component","EditorBasic","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99538b69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Bpmn_container__3VDj4\",\"canvas\":\"Bpmn_canvas__2hqYK\",\"panel\":\"Bpmn_panel__1b08Y\"};","import React, { Component } from 'react';\r\nimport BpmnModeler from 'bpmn-js/lib/Modeler';\r\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\r\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\r\nimport camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda';\r\nimport { diagramXML } from '../sources/xml';\r\nimport './Common.sass';\r\nimport styles from './Bpmn.module.scss';\r\n\r\nexport default class Bpmn extends Component {\r\n  componentDidMount() {\r\n    this.bpmnModeler = new BpmnModeler({\r\n      container: '#canvas',\r\n      propertiesPanel: {\r\n        parent: '#properties-panel'\r\n      },\r\n      additionalModules: [propertiesPanelModule, propertiesProviderModule],\r\n      moddleExtensions: {\r\n        camunda: camundaModdleDescriptor\r\n      }\r\n    });\r\n\r\n    this.renderDiagram(diagramXML);\r\n  }\r\n\r\n  renderDiagram = (xml) => {\r\n    this.bpmnModeler.importXML(xml, (err) => {\r\n      if (err) {\r\n        console.log('导入失败');\r\n      } else {\r\n        console.log('导入成功');\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.canvas} id=\"canvas\" />\r\n        <div\r\n          className={`properties-panel-parent ${styles.panel}`}\r\n          id=\"properties-panel\"\r\n          style={{ height: '100%' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const diagramXML = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<bpmn2:definitions\r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\r\n  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\"\r\n  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\"\r\n  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\"\r\n  xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\"\r\n  id=\"sample-diagram\"\r\n  targetNamespace=\"http://bpmn.io/schema/bpmn\"\r\n>\r\n  <bpmn2:process id=\"Process_1\" isExecutable=\"false\">\r\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\r\n  </bpmn2:process>\r\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\r\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\r\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\r\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\r\n      </bpmndi:BPMNShape>\r\n    </bpmndi:BPMNPlane>\r\n  </bpmndi:BPMNDiagram>\r\n</bpmn2:definitions>`;\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { HashRouter, Link, Route } from 'react-router-dom';\r\nimport EditorBasic from './containers/EditorBasic';\r\nimport './App.css';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst urlData = {\r\n  editorBasic: ''\r\n};\r\n\r\nconst codeData = {\r\n  editorBasic: '<div>123456</div>'\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      collapsed: false,\r\n      item: ''\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  handleSelectItme = (params) => {\r\n    const { key } = params;\r\n    this.setState({\r\n      item: key\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { item } = this.state;\r\n\r\n    return (\r\n      <HashRouter>\r\n        <Layout style={{ height: '100%' }}>\r\n          <Sider\r\n            trigger={null}\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n          >\r\n            <div className=\"logo\" />\r\n            <Menu\r\n              defaultSelectedKeys={['basic']}\r\n              defaultOpenKeys={['viewer', 'editor']}\r\n              mode=\"inline\"\r\n              theme=\"dark\"\r\n              inlineCollapsed={this.state.collapsed}\r\n              onSelect={this.handleSelectItme}\r\n            >\r\n              <SubMenu\r\n                key=\"viewer\"\r\n                title={\r\n                  <span>\r\n                    <Icon type=\"smile\" />\r\n                    <span>显示界面</span>\r\n                  </span>}\r\n              >\r\n                <Menu.Item key=\"basic\">基本显示</Menu.Item>\r\n                <Menu.Item key=\"6\">当前步骤</Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu\r\n                key=\"editor\"\r\n                title={\r\n                  <span>\r\n                    <Icon type=\"smile\" />\r\n                    <span>组态界面</span>\r\n                  </span>}\r\n              >\r\n                <Menu.Item key=\"editorBasic\"><Link to=\"/editor/basic\">基本用法</Link></Menu.Item>\r\n                <Menu.Item key=\"editorTools\">工具栏</Menu.Item>\r\n                <Menu.Item key=\"editorPalette\">控制板</Menu.Item>\r\n                <Menu.Item key=\"editorMenu\">菜单项</Menu.Item>\r\n              </SubMenu>\r\n              <Menu.Item key=\"i18n\">国际化</Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0 }}>\r\n              <Icon\r\n                className=\"trigger\"\r\n                type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                onClick={this.toggle}\r\n              />\r\n            </Header>\r\n            <Content style={{ display: 'flex', flexDirection: 'column', margin: '24px 16px', padding: 24, background: '#fff', minHeight: 280 }}>\r\n              <h3><a href={urlData[item]}>源码地址</a></h3>\r\n              <h3>依赖包</h3>\r\n              <pre>\r\n                <code dangerouslySetInnerHTML={{ __html: codeData[item] }} />\r\n              </pre>\r\n              <div style={{ position: 'relative', flex: 'auto' }}>\r\n                <div style={{ position: 'absolute', left: 0, top: 0, width: '100%', height: '100%' }}>\r\n                  <Route exact path=\"/\" component={() => { return (<span>q2</span>); }} />\r\n                  <Route path=\"/editor/basic\" component={EditorBasic} />\r\n                </div>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}