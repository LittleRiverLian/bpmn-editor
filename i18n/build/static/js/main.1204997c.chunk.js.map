{"version":3,"sources":["containers/modeler/customTranslate/TranslationsGerman.js","containers/modeler/customTranslate/index.js","containers/modeler/customTranslate/CustomTranslate.js","containers/modeler/index.js","sources/xml.js","containers/index.js","App.js","index.js","containers/Bpmn.module.scss"],"names":["TranslationsGerman","Send Task","Receive Task","User Task","Manual Task","Business Rule Task","Service Task","Script Task","Call Activity","Sub Process (collapsed)","Sub Process (expanded)","Exclusive Gateway","modeler_customTranslate","__init__","translate","template","replacements","translations","replace","_","key","concat","CustomModeler","options","Modeler","call","this","customElements","inherits","prototype","_modules","CustomTranslate","addCustomShape","customElement","push","canvas","get","elementFactory","customAttrs","assign","businessObject","customShape","create","addShape","addCustomConnection","elementRegistry","connection","source","target","parent","addConnection","addCustomElements","isArray","Error","shapes","connections","forEach","type","getCustomElements","Bpmn","renderDiagram","xml","_this","bpmnModeler","importXML","err","console","log","BpmnModeler","container","propertiesPanel","additionalModules","propertiesPanelModule","propertiesProviderModule","moddleExtensions","camunda","camundaModdleDescriptor","react_default","a","createElement","className","styles","id","panel","style","height","Component","App","overflow","containers_Bpmn","ReactDOM","render","src_App","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1204997c.chunk.js","sourcesContent":["export default {\n  // Labels\n  // 'Activate the global connect tool' : 'Globales Verbindungswerkzeug aktivieren',\n  // 'Append {type}': '{type} anfügen',\n  // 'Add Lane above': 'Lane oberhalb hinzufügen',\n  // 'Divide into two Lanes': 'In zwei Lanes aufteilen',\n  // 'Divide into three Lanes': 'In drei Lanes aufteilen',\n  // 'Add Lane below': 'Lane unterhalb hinzufügen',\n  // 'Append compensation activity': 'Kompensation hinzufügen',\n  // 'Change type': 'Typ ändern',\n  // 'Connect using Association': 'Mit Assoziation verbinden',\n  // 'Connect using Sequence/MessageFlow or Association': 'Mit Sequenzfluss/Nachrichtenfluss oder Assoziation verbinden',\n  // 'Connect using DataInputAssociation': 'Mit DataInputAssociation verbinden',\n  // 'Remove': 'Löschen',\n  // 'Activate the hand tool': 'Hand-Tool aktivieren',\n  // 'Activate the lasso tool': 'Lasso-Tool aktivieren',\n  // 'Activate the create/remove space tool': 'Platz-hinzufügen/entfernen-Tool aktivieren',\n  // 'Create expanded SubProcess': 'Erweiterten SubProcess erzeugen',\n  // 'Create IntermediateThrowEvent/BoundaryEvent' : 'IntermediateThrowEvent/BoundaryEvent erzeugen',\n  // 'Create Pool/Participant': 'Pool/Teilnehmer erzeugen',\n  // 'Parallel Multi Instance': 'Parallele Multi-Instanz',\n  // 'Sequential Multi Instance': 'Sequenzielle Multi-Instanz',\n  // 'Loop': 'Schleife',\n  // 'Ad-hoc': 'Ad-hoc',\n  // 'Create {type}': '{type} erzeugen',\n  // 'Task': 'Aufgabe',\n  'Send Task': '发送任务',\n  'Receive Task': '接收任务',\n  'User Task': '用户任务',\n  'Manual Task': '手动任务',\n  'Business Rule Task': '业务规则任务',\n  'Service Task': '归档任务',\n  'Script Task': '脚本任务',\n  'Call Activity': '调用活动',\n  'Sub Process (collapsed)': '子进程（收起）',\n  'Sub Process (expanded)': '子进程（展开）',\n  // 'Intermediate Throw Event': 'Zwischenereignis',\n  // 'Message Start Event': 'Nachrichten-Startereignis',\n  // 'Timer Start Event': 'Zeit-Startereignis',\n  // 'Conditional Start Event': 'Bedingtes Startereignis',\n  // 'Signal Start Event': 'Signal-Startereignis',\n  // 'Error Start Event': 'Fehler-Startereignis',\n  // 'Escalation Start Event': 'Eskalations-Startereignis',\n  // 'Compensation Start Event': 'Kompensations-Startereignis',\n  // 'Message Start Event (non-interrupting)': 'Nachrichten-Startereignis (nicht unterbrechend)',\n  // 'Timer Start Event (non-interrupting)': 'Zeit-Startereignis (nicht unterbrechend)',\n  // 'Conditional Start Event (non-interrupting)': 'Bedingtes Startereignis (nicht unterbrechend)',\n  // 'Signal Start Event (non-interrupting)': 'Signal-Startereignis (nicht unterbrechend)',\n  // 'Escalation Start Event (non-interrupting)': 'Eskalations-Startereignis (nicht unterbrechend)',\n  // 'Message Intermediate Catch Event': 'Eintretendes Nachrichten-Zwischenereignis',\n  // 'Message Intermediate Throw Event': 'Ausgelöstes Nachrichten-Zwischenereignis',\n  // 'Timer Intermediate Catch Event': 'Eintretendes Zeit-Zwischenereignis',\n  // 'Escalation Intermediate Throw Event': 'Ausgelöstes Eskalations-Zwischenereignis',\n  // 'Conditional Intermediate Catch Event': 'Eintretendes bedingtes Zwischenereignis',\n  // 'Link Intermediate Catch Event': 'Eintretendes Link-Zwischenereignis',\n  // 'Link Intermediate Throw Event': 'Ausgelöstes Link-Zwischenereignis',\n  // 'Compensation Intermediate Throw Event': 'Ausgelöstes Kompensations-Zwischenereignis',\n  // 'Signal Intermediate Catch Event': 'Eintretendes Signal-Zwischenereignis',\n  // 'Signal Intermediate Throw Event': 'Ausgelöstes Signal-Zwischenereignis',\n  // 'Message End Event': 'Nachrichten-Endereignis',\n  // 'Escalation End Event': 'Eskalations-Endereignis',\n  // 'Error End Event': 'Fehler-Endereignis',\n  // 'Cancel End Event': 'Abbruchs-Endereignis',\n  // 'Compensation End Event': 'Kompensations-Endereignis',\n  // 'Signal End Event': 'Signal-Endereignis',\n  // 'Terminate End Event': 'Terminierungs-Endereignis',\n  // 'Message Boundary Event': 'Angeheftetes Nachrichten-Zwischenereignis',\n  // 'Message Boundary Event (non-interrupting)': 'Angeheftetes Nachrichten-Zwischenereignis (nicht unterbrechend)',\n  // 'Timer Boundary Event': 'Angeheftetes Zeit-Zwischenereignis',\n  // 'Timer Boundary Event (non-interrupting)': 'Angeheftetes Zeit-Zwischenereignis (nicht unterbrechend)',\n  // 'Escalation Boundary Event': 'Angeheftetes Eskalations-Zwischenereignis',\n  // 'Escalation Boundary Event (non-interrupting)': 'Angeheftetes Eskalations-Zwischenereignis (nicht unterbrechend)',\n  // 'Conditional Boundary Event': 'Angeheftetes bedingtes Zwischenereignis',\n  // 'Conditional Boundary Event (non-interrupting)': 'Angeheftetes bedingtes Zwischenereignis (nicht unterbrechend)',\n  // 'Error Boundary Event': 'Angeheftetes Fehler-Zwischenereignis',\n  // 'Cancel Boundary Event': 'Angeheftetes Abbruch-Zwischenereignis',\n  // 'Signal Boundary Event': 'Angeheftetes Signal-Zwischenereignis',\n  // 'Signal Boundary Event (non-interrupting)': 'Angeheftetes Signal-Zwischenereignis (nicht unterbrechend)',\n  // 'Compensation Boundary Event': 'Angeheftetes Kompensations-Zwischenereignis',\n  'Exclusive Gateway': '判断'\n  // 'Parallel Gateway': 'Paralleles Gateway',\n  // 'Inclusive Gateway': 'Inklusives Gateway',\n  // 'Complex Gateway': 'Komplexes Gateway',\n  // 'Event based Gateway': 'Ereignis-basiertes Gateway',\n  // 'Transaction': 'Transaktion',\n  // 'Sub Process': 'Teilprozess',\n  // 'Event Sub Process': 'Ereignis-Teilprozess',\n  // 'Collapsed Pool': 'Zugeklappter Pool',\n  // 'Expanded Pool': 'Ausgeklappter Pool',\n\n  // // Errors\n  // 'no parent for {element} in {parent}': 'kein Eltern-Element für {element} in {parent}',\n  // 'no shape type specified': 'kein Typ der Form angegeben',\n  // 'flow elements must be children of pools/participants': 'Fluss-Elemente müssen Kinder von Pools/Teilnehmern sein',\n  // 'out of bounds release': 'außerhalb der Grenzen Release',\n  // 'more than {count} child lanes': 'mehr als {count} Lane-Kinder',\n  // 'element required': 'Element benötigt',\n  // 'diagram not part of bpmn:Definitions': 'Prozessmodell ist nicht Teil von bpmn:Definitions',\n  // 'no diagram to display': 'kein Prozessmodell',\n  // 'no process or collaboration to display': 'kein Prozess/Kollaboration',\n  // 'element {element} referenced by {referenced}#{property} not yet drawn': 'von {referenced}#{property} referenziertes Element {element} noch nicht gezeichnet',\n  // 'already rendered {element}': '{element} bereits gerendert',\n  // 'failed to import {element}': '{element} konnte nicht importiert werden'\n};\n","/*\r\n * @Author: Eric\r\n * @Date: 2018-06-07 13:18:30\r\n * @Last Modified by: Eric\r\n * @Last Modified time: 2018-06-07 13:19:13\r\n * @ 功能：自定义语言（i18n）\r\n */\r\n\r\nimport CustomTranslate from './CustomTranslate';\r\n\r\nexport default {\r\n  __init__: ['translate'],\r\n  translate: ['value', CustomTranslate]\r\n};\r\n","import translations from './TranslationsGerman';\r\n\r\nexport default function customTranslate(template, replacements) {\r\n  replacements = replacements || {};\r\n\r\n  // Translate\r\n  template = translations[template] || template;\r\n\r\n  // Replace\r\n  return template.replace(/{([^}]+)}/g, (_, key) => {\r\n    return replacements[key] || `{${key}}`;\r\n  });\r\n}\r\n","import Modeler from 'bpmn-js/lib/Modeler';\n\nimport { assign, isArray } from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport CustomTranslate from './customTranslate';\n\nexport default function CustomModeler(options) {\n  Modeler.call(this, options);\n\n  this.customElements = [];\n}\n\ninherits(CustomModeler, Modeler);\n\n\nCustomModeler.prototype._modules = [].concat(\n  CustomModeler.prototype._modules,\n  [\n    CustomTranslate\n  ]\n);\n\n/**\n * Add a single custom element to the underlying diagram\n *\n * @param {Object} customElement\n */\nCustomModeler.prototype.addCustomShape = function (customElement) {\n  this.customElements.push(customElement);\n\n  const canvas = this.get('canvas');\n  const elementFactory = this.get('elementFactory');\n\n  const customAttrs = assign({ businessObject: customElement }, customElement);\n\n  const customShape = elementFactory.create('shape', customAttrs);\n\n  return canvas.addShape(customShape);\n};\n\nCustomModeler.prototype.addCustomConnection = function (customElement) {\n  this.customElements.push(customElement);\n\n  const canvas = this.get('canvas');\n  const elementFactory = this.get('elementFactory');\n  const elementRegistry = this.get('elementRegistry');\n\n  const customAttrs = assign({ businessObject: customElement }, customElement);\n\n  const connection = elementFactory.create(\n    'connection',\n    assign(customAttrs, {\n      source: elementRegistry.get(customElement.source),\n      target: elementRegistry.get(customElement.target)\n    }),\n    elementRegistry.get(customElement.source).parent\n  );\n\n  return canvas.addConnection(connection);\n};\n\n/**\n * Add a number of custom elements and connections to the underlying diagram.\n *\n * @param {Array<Object>} customElements\n */\nCustomModeler.prototype.addCustomElements = function (customElements) {\n  if (!isArray(customElements)) {\n    throw new Error('argument must be an array');\n  }\n\n  const shapes = [];\n  const connections = [];\n\n  customElements.forEach((customElement) => {\n    if (isCustomConnection(customElement)) {\n      connections.push(customElement);\n    } else {\n      shapes.push(customElement);\n    }\n  });\n\n  // add shapes before connections so that connections\n  // can already rely on the shapes being part of the diagram\n  shapes.forEach(this.addCustomShape, this);\n\n  connections.forEach(this.addCustomConnection, this);\n};\n\n/**\n * Get custom elements with their current status.\n *\n * @return {Array<Object>} custom elements on the diagram\n */\nCustomModeler.prototype.getCustomElements = function () {\n  return this.customElements;\n};\n\nfunction isCustomConnection(element) {\n  return element.type === 'custom:connection';\n}\n","export const diagramXML = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<bpmn2:definitions\r\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\r\n  xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\"\r\n  xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\"\r\n  xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\"\r\n  xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\"\r\n  id=\"sample-diagram\"\r\n  targetNamespace=\"http://bpmn.io/schema/bpmn\"\r\n>\r\n  <bpmn2:process id=\"Process_1\" isExecutable=\"false\">\r\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\r\n  </bpmn2:process>\r\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\r\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\r\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\r\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\r\n      </bpmndi:BPMNShape>\r\n    </bpmndi:BPMNPlane>\r\n  </bpmndi:BPMNDiagram>\r\n</bpmn2:definitions>`;\r\n","import React, { Component } from 'react';\r\nimport propertiesPanelModule from 'bpmn-js-properties-panel';\r\nimport propertiesProviderModule from 'bpmn-js-properties-panel/lib/provider/camunda';\r\nimport camundaModdleDescriptor from 'camunda-bpmn-moddle/resources/camunda';\r\nimport BpmnModeler from './modeler';\r\nimport { diagramXML } from '../sources/xml';\r\nimport './Common.sass';\r\nimport styles from './Bpmn.module.scss';\r\n\r\nexport default class Bpmn extends Component {\r\n  componentDidMount() {\r\n    this.bpmnModeler = new BpmnModeler({\r\n      container: '#canvas',\r\n      propertiesPanel: {\r\n        parent: '#properties-panel'\r\n      },\r\n      additionalModules: [propertiesPanelModule, propertiesProviderModule],\r\n      moddleExtensions: {\r\n        camunda: camundaModdleDescriptor\r\n      }\r\n    });\r\n\r\n    this.renderDiagram(diagramXML);\r\n  }\r\n\r\n  renderDiagram = (xml) => {\r\n    this.bpmnModeler.importXML(xml, (err) => {\r\n      if (err) {\r\n        console.log('导入失败');\r\n      } else {\r\n        console.log('导入成功');\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.canvas} id=\"canvas\" />\r\n        <div\r\n          className={`properties-panel-parent ${styles.panel}`}\r\n          id=\"properties-panel\"\r\n          style={{ height: '100%' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport EditorBasic from './containers';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ height: '100%', overflow: 'hidden' }}>\r\n        <EditorBasic />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Bpmn_container__2R5A_\",\"canvas\":\"Bpmn_canvas__2CT5o\",\"panel\":\"Bpmn_panel__1yfa6\"};"],"sourceRoot":""}